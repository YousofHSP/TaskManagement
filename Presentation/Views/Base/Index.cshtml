@using System.ComponentModel.DataAnnotations
@using Common.Utilities
@using Microsoft.AspNetCore.Mvc.TagHelpers

@{
    var model = ViewBag.Model;
    var selectedFilters = ViewBag.SelectedFilters as Dictionary<string, string>;
    var sums = ViewBag.Sums as Dictionary<string, string> ?? new();
    var filters = model.Filters as List<Field>;
    ViewData["Title"] = "لیست " + Model.Title;
}

<div class="card">
    <div class="card-body">
        <div class="col-12 mb-3">
            @if (filters is not null && filters.Any())
            {
                <div class="accordion border-0" id="filters-accordion">
                    <div class="accordion-item border-0" id="heading-filters">
                        <div id="collapse-filters" class="accordion-collapse collapse" aria-labelledby="heading-filters"
                             data-bs-parent="#filters-accordion">
                            <div class="accordion-body">

                                <form asp-action="Index" method="get">
                                    <div class="row">
                                        @foreach (var filter in filters)
                                        {
                                            var selectedValue = selectedFilters?.GetValueOrDefault(filter.Name);
                                            if (!string.IsNullOrEmpty(selectedValue))
                                            {
                                                filter.Items = filter.Items.Select(i =>
                                                {
                                                    if (i.Value == selectedValue)
                                                        i.Selected = true;
                                                    return i;
                                                }).ToList();
                                            }

                                            <div class="form-group col-md-4">
                                                <label for="@filter.Name">@filter.Label</label>
                                                <select class="form-control select2" name="Filters[@filter.Name]"
                                                        asp-items="@filter.Items">
                                                </select>

                                            </div>
                                        }
                                    </div>
                                    <button type="submit" class="btn btn-primary">جستجو</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            }


        </div>
        <div class="d-flex justify-content-between">
            @if (model.ViewSetting.Create)
            {
                <a asp-action="Create" class="btn btn-round btn-primary"><i class="dripicons-document-new"></i></a>
            }

            @if (filters is not null && filters.Any())
            {
                <button class="btn btn-success mr-2 p-2" type="button" data-bs-toggle="collapse"
                        data-bs-target="#collapse-filters" aria-expanded="true" aria-controls="collapse-filters">
                    جستجو
                </button>
            }
        </div>
        <table class="table table-hover mt-2">
            <thead>
            <tr>
                @foreach (var item in model.Columns)
                {
                    <td>@item.Name</td>
                }
                @if (model.ViewSetting.Delete || model.ViewSetting.Edit)
                {
                    <td>عملیات</td>
                }
            </tr>
            </thead>
            <tbody>
            @foreach (var row in model.Rows)
            {
                <tr>
                    @foreach (var col in model.Columns)
                    {
                        var property = row.GetType().GetProperty(col.Value);
                        var value = property?.GetValue(row);
                        if (property is not null && property.PropertyType.IsEnum)
                        {
                            var field = property.PropertyType.GetField(value.ToString());
                            if (field is not null)
                            {
                                var display = (DisplayAttribute)Attribute.GetCustomAttribute(field, typeof(DisplayAttribute));
                                value = display != null ? display.Name : value.ToString();
                            }
                        }

                        <td>@value</td>
                    }
                    @if (model.ViewSetting.Edit || model.ViewSetting.Delete)
                    {
                        <td>
                            @if (model.ViewSetting.Edit)
                            {
                                <a asp-action="Edit" asp-route-id="@row.Id" class="btn btn-round btn-primary"><i
                                        class="dripicons-document-edit"></i></a>
                            }
                            @if (model.ViewSetting.Delete)
                            {
                                <a asp-action="Delete" asp-route-id="@row.Id" class="btn btn-round btn-danger"><i
                                        class="dripicons-document-delete"></i></a>
                            }
                        </td>
                    }
                </tr>
            }
            </tbody>
        </table>
        <div class="row">
            @foreach (var sumItem in sums)
            {
                <div class="col-3 d-flex">
                    <div class="col">@sumItem.Key</div>
                    <div class="col">@sumItem.Value</div>
                </div>
            }
        </div>

    </div>

</div>